# Copyright (C) 2019-2020 Zilliz. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under the License

set(MILVUS_EXEC_SRCS
        expression/EvalCtx.cpp
        expression/Expr.cpp
        expression/VectorFunction.cpp
        expression/UnaryExpr.cpp
        expression/ConjunctExpr.cpp
        expression/LogicalUnaryExpr.cpp
        expression/LogicalBinaryExpr.cpp
        expression/TermExpr.cpp
        expression/BinaryArithOpEvalRangeExpr.cpp
        expression/BinaryRangeExpr.cpp
        expression/AlwaysTrueExpr.cpp
        expression/CompareExpr.cpp
        expression/JsonContainsExpr.cpp
        expression/ExistsExpr.cpp
        operator/FilterBits.cpp
        operator/Operator.cpp
        Driver.cpp
        Task.cpp
        #TaskCursor.cpp
        )

add_library(milvus_exec SHARED ${MILVUS_EXEC_SRCS})
if(USE_DYNAMIC_SIMD)
        target_link_libraries(milvus_exec milvus_common milvus_simd ${CONAN_LIBS})
else() 
        target_link_libraries(milvus_exec milvus_common ${CONAN_LIBS})
endif()

# Unittest lib
if ( BUILD_UNIT_TEST STREQUAL "ON" )
    append_flags( CMAKE_CXX_FLAGS FLAGS "-DELPP_DISABLE_LOGS")
    add_subdirectory(unittest)
endif ()
